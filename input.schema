{
  "functions": [
    {
      "name": "BasicIterativeMethod",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "doctxt": "The Basic Iterative Method introduced in [1].\n\nThis attack is also known as Projected Gradient Descent (PGD) (without random start) or FGMS^k.\n\nReferences\n[1] Alexey Kurakin, Ian Goodfellow, Samy Bengio, \"Adversarial examples in the physical world\", https://arxiv.org/abs/1607.02533",
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "binary_search",
          "type": "bool",
          "default": true,
          "required": true,
          "doctxt": "\nWhether to perform a binary search over epsilon and stepsize, keeping their ratio constant and using their values to start the search. If False, hyperparameters are not optimized.\n"
        },
        {
          "name": "epsilon",
          "type": "float",
          "default": 0.3,
          "required": true,
          "doctxt": "\nLimit on the perturbation size; if binary_search is True, this value is only for initialization and automatically adapted.\n"
        },
        {
          "name": "stepsize",
          "type": "float",
          "default": 0.05,
          "required": true,
          "doctxt": "\nStep size for gradient descent; if binary_search is True, this value is only for initialization and automatically adapted.\n"
        },
        {
          "name": "iterations",
          "type": "int",
          "default": 10,
          "required": true,
          "doctxt": "\nNumber of iterations for each gradient descent run.\n"
        },
        {
          "name": "random_start",
          "type": "bool",
          "default": false,
          "required": true,
          "doctxt": "\nStart the attack from a random point rather than from the original input.\n"
        },
        {
          "name": "return_early",
          "type": "bool",
          "default": true,
          "required": true,
          "doctxt": "\nWhether an individual gradient descent run should stop as soon as an adversarial is found.\n"
        }
      ]
    },
    {
      "name": "CarliniWagnerL2Attack",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "binary_search_steps",
          "type": "int",
          "default": 5,
          "required": true
        },
        {
          "name": "max_iterations",
          "type": "int",
          "default": 1000,
          "required": true
        },
        {
          "name": "confidence",
          "type": "int",
          "default": 0,
          "required": true
        },
        {
          "name": "learning_rate",
          "type": "float",
          "default": 0.005,
          "required": true
        },
        {
          "name": "initial_const",
          "type": "float",
          "default": 0.01,
          "required": true
        },
        {
          "name": "abort_early",
          "type": "bool",
          "default": true,
          "required": true
        }
      ]
    },
    {
      "name": "DeepFoolL2Attack",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "steps",
          "type": "int",
          "default": 100,
          "required": true
        },
        {
          "name": "subsample",
          "type": "int",
          "default": 10,
          "required": true
        }
      ]
    },
    {
      "name": "DeepFoolLinfinityAttack",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "steps",
          "type": "int",
          "default": 100,
          "required": true
        },
        {
          "name": "subsample",
          "type": "int",
          "default": 10,
          "required": true
        }
      ]
    },
    {
      "name": "FGSM",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "epsilons",
          "type": "int",
          "default": 1000,
          "required": true
        },
        {
          "name": "max_epsilon",
          "type": "int",
          "default": 1,
          "required": true
        }
      ]
    },
    {
      "name": "IterativeGradientSignAttack",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "epsilons",
          "type": "int",
          "default": 100,
          "required": true
        },
        {
          "name": "max_epsilon",
          "type": "int",
          "default": 1,
          "required": true
        },
        {
          "name": "steps",
          "type": "int",
          "default": 10,
          "required": true
        }
      ]
    },
    {
      "name": "LBFGSAttack",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "epsilon",
          "type": "float",
          "default": 1e-05,
          "required": true
        },
        {
          "name": "num_random_targets",
          "type": "int",
          "default": 0,
          "required": true
        },
        {
          "name": "maxiter",
          "type": "int",
          "default": 150,
          "required": true
        }
      ]
    },
    {
      "name": "ProjectedGradientDescent",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "binary_search",
          "type": "bool",
          "default": true,
          "required": true
        },
        {
          "name": "epsilon",
          "type": "float",
          "default": 0.3,
          "required": true
        },
        {
          "name": "stepsize",
          "type": "float",
          "default": 0.01,
          "required": true
        },
        {
          "name": "iterations",
          "type": "int",
          "default": 40,
          "required": true
        },
        {
          "name": "random_start",
          "type": "bool",
          "default": false,
          "required": true
        },
        {
          "name": "return_early",
          "type": "bool",
          "default": true,
          "required": true
        }
      ]
    },
    {
      "name": "RandomProjectedGradientDescent",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "binary_search",
          "type": "bool",
          "default": true,
          "required": true
        },
        {
          "name": "epsilon",
          "type": "float",
          "default": 0.3,
          "required": true
        },
        {
          "name": "stepsize",
          "type": "float",
          "default": 0.01,
          "required": true
        },
        {
          "name": "iterations",
          "type": "int",
          "default": 40,
          "required": true
        },
        {
          "name": "random_start",
          "type": "bool",
          "default": true,
          "required": true
        },
        {
          "name": "return_early",
          "type": "bool",
          "default": true,
          "required": true
        }
      ]
    },
    {
      "name": "SaltAndPepperNoiseAttack",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "epsilons",
          "type": "int",
          "default": 100,
          "required": true
        },
        {
          "name": "repetitions",
          "type": "int",
          "default": 10,
          "required": true
        }
      ]
    },
    {
      "name": "SinglePixelAttack",
      "extensions": [
        {
          "extension": "jpg"
        }
      ],
      "options": [
        {
          "name": "model",
          "type": "enum",
          "values": [
            "vgg16",
            "resnet18"
          ],
          "required": true,
          "doctxt": "Pre-trained model to be attacked."
        },
        {
          "name": "max_pixels",
          "type": "int",
          "default": 1000,
          "required": true
        }
      ]
    }
  ],
  "doctxt": "Foolbox is a Python toolbox to create adversarial examples that fool neural networks.",
  "tagline": "Fool neural networks!"
}